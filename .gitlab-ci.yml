# Select image from https://hub.docker.com/_/php/
image: php:7.2

# Select what we should cache
cache:
  paths:
  - vendor/

before_script:
- apt-get update -yqq
# Node / YARN / NPM
- apt-get install -y --no-install-recommends gnupg
- curl -sL https://deb.nodesource.com/setup_10.x | bash -
- apt-get update
- apt-get install -y --no-install-recommends nodejs
- curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
- echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
- apt-get update
- apt-get install -y --no-install-recommends yarn
- npm install -g npm
# Update & Install tools
- apt-get install git -yqq
- apt-get install zlib1g-dev -yqq
# Install PHP Extensions
- docker-php-ext-install pdo_mysql
- docker-php-ext-install zip
# Configuration
- cp .env.sample .env
# Install composer
- curl -sS https://getcomposer.org/installer | php
# Install all project dependencies
- php composer.phar install
- npm install
# Assets
- ./node_modules/gulp/bin/gulp.js

services:
- mysql

variables:
  # Mysql service (https://hub.docker.com/_/mysql/)
  MYSQL_DATABASE: oikoshi
  MYSQL_ROOT_PASSWORD: password

stages:
  - syntax
  - qa
  - test

qa:phpstan:
  stage: qa
  script:
    - ./vendor/bin/phpstan analyse src tests --level=4

syntax:phpcs:
  stage: syntax
  script:
    - ./vendor/bin/phpcs --error-severity=1 --warning-severity=8 --extensions=php

syntax:lint:js:
  stage: syntax
  script:
    - ./node_modules/gulp/bin/gulp.js lintJS

syntax:lint:scss:
  stage: syntax
  script:
    - ./node_modules/gulp/bin/gulp.js lintSCSS

syntax:lint:twig:
  stage: syntax
  script:
    - php bin/console lint:twig templates/

test:behat:
  stage: test
  before_script:
    - uname -a
    - cat /etc/apt/sources.list
    - apt-get update
    - apt-get install chromium
    - chromium --remote-debugging-address=0.0.0.0 --remote-debugging-port=9222 --disable-gpu --headless --disable-logging &
    - cp .env.test .env
    - cp .behat.yml.dist .behat.yml
    - php bin/console doctrine:database:update --dump-sql --force
    - php bin/console fos:user:create user user@domain.tld p@ssword
  script:
    - APP_ENV=test ./vendor/bin/behat

test:phpunit:
  stage: test
  script:
    - ./vendor/bin/phpunit